/*
---- WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING  ----
---- ANY MANUAL CHANGES IN THIS FILE WILL DISAPPEAR IF YOU REGENERATE ----
--------------------------------------------------------------------------
 This file has been generated by http://github.com/fnchooft/CStructGen
--------------------------------------------------------------------------
 Package: @PACKAGE_NAME@
 Version: @PACKAGE_VERSION@
 Sha1sum: a4993fa22b782719af0e4e636840452a250bcb4c  Pair.hpp
--------------------------------------------------------------------------
 Make sure to update the originating Pair.hpp-file
--------------------------------------------------------------------------
---- WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING  ----
---- ANY MANUAL CHANGES IN THIS FILE WILL DISAPPEAR IF YOU REGENERATE ----
*/
#ifndef __DEFINITION_PAIR_HPP__
#define __DEFINITION_PAIR_HPP__


#include "Pair.hpp"


#ifdef __cplusplus


// C++ overloads, methods, and so on
#include <map>
#include <string>
#include <iostream>
#include <utility>
#include <sstream>
#include <stdint.h>


// Generated stream-operators for: SPairSecond
std::ostream & operator<<(std::ostream & out, const SPairSecond & spairsecond);
std::string toString(const SPairSecond & spairsecond);
// struct: SPairSecond compare-functions due to union existance...
// Found Struct->settings.... 0
// Generated default compare definitions for struct: SPairSecond
bool operator< (SPairSecond lhs, SPairSecond rhs);
bool operator<=(SPairSecond lhs, SPairSecond rhs);
bool operator> (SPairSecond lhs, SPairSecond rhs);
bool operator>=(SPairSecond lhs, SPairSecond rhs);
bool operator==(SPairSecond lhs, SPairSecond rhs);
bool operator!=(SPairSecond lhs, SPairSecond rhs);
// Generated toJsonString / fromJsonString definition for struct: SPairSecond
std::string toJsonString(SPairSecond *input);
int32_t fromJson(SPairSecond *output, std::string jsondata);
// Generated default toString,fromString,stream definitions for enumeration: EPairType
std::string toString(EPairType enumval, int32_t shortname = 0);
bool fromString(std::string stringvalue, EPairType *enum_ptr);
std::ostream & operator<<(std::ostream & out, const EPairType epairtype);
// Generated toJsonString / fromJsonString definition for struct: EPairType
std::string toJsonString(EPairType *input);
int32_t fromJson(EPairType *output, std::string jsondata);
// Generated stream-operators for: SPair
std::ostream & operator<<(std::ostream & out, const SPair & spair);
std::string toString(const SPair & spair);
// struct: SPair compare-functions due to union existance...
// Found Struct->settings.... 0
// Generated default compare definitions for struct: SPair
bool operator< (SPair lhs, SPair rhs);
bool operator<=(SPair lhs, SPair rhs);
bool operator> (SPair lhs, SPair rhs);
bool operator>=(SPair lhs, SPair rhs);
bool operator==(SPair lhs, SPair rhs);
bool operator!=(SPair lhs, SPair rhs);
// Generated toJsonString / fromJsonString definition for struct: SPair
std::string toJsonString(SPair *input);
int32_t fromJson(SPair *output, std::string jsondata);
// Generated stream-operators for: SMapTest
std::ostream & operator<<(std::ostream & out, const SMapTest & smaptest);
std::string toString(const SMapTest & smaptest);
// struct: SMapTest compare-functions due to union existance...
// Found Struct->settings.... 0
// Generated default compare definitions for struct: SMapTest
bool operator< (SMapTest lhs, SMapTest rhs);
bool operator<=(SMapTest lhs, SMapTest rhs);
bool operator> (SMapTest lhs, SMapTest rhs);
bool operator>=(SMapTest lhs, SMapTest rhs);
bool operator==(SMapTest lhs, SMapTest rhs);
bool operator!=(SMapTest lhs, SMapTest rhs);
// Generated toJsonString / fromJsonString definition for struct: SMapTest
std::string toJsonString(SMapTest *input);
int32_t fromJson(SMapTest *output, std::string jsondata);
// Generated stream-operators for: SVectorEnumTest
std::ostream & operator<<(std::ostream & out, const SVectorEnumTest & svectorenumtest);
std::string toString(const SVectorEnumTest & svectorenumtest);
// struct: SVectorEnumTest compare-functions due to union existance...
// Found Struct->settings.... 0
// Generated default compare definitions for struct: SVectorEnumTest
bool operator< (SVectorEnumTest lhs, SVectorEnumTest rhs);
bool operator<=(SVectorEnumTest lhs, SVectorEnumTest rhs);
bool operator> (SVectorEnumTest lhs, SVectorEnumTest rhs);
bool operator>=(SVectorEnumTest lhs, SVectorEnumTest rhs);
bool operator==(SVectorEnumTest lhs, SVectorEnumTest rhs);
bool operator!=(SVectorEnumTest lhs, SVectorEnumTest rhs);
// Generated toJsonString / fromJsonString definition for struct: SVectorEnumTest
std::string toJsonString(SVectorEnumTest *input);
int32_t fromJson(SVectorEnumTest *output, std::string jsondata);
#endif // ___cplusplus


#endif // __DEFINITION_PAIR_HPP__
